#!/usr/bin/env ruby

$dir = File.dirname ARGV.first || '.'
$r_include = %r{/\*>\s*(.+?)\s*\*/}
$r_include_inside_string = Regexp.new('"' << $r_include.source << '"')


def get_file(path='')
  result = ''
  if path.start_with? 'http://'
    require 'net/http'
    url = URI.parse path
    Net::HTTP.start url.host, url.port do |http|
      page = http.get url.path
      if page.is_a? Net::HTTPSuccess
        result = page.body
      else
        raise page.body
      end
    end
  else
    result = File.read File.join($dir, path)
  end
  result
end

def parse(text='')
  text.gsub!($r_include_inside_string) {
    '"' << parse(get_file $1).gsub(%r{$}, '\\').chop << '"'
  }
  text.gsub!($r_include) {
    parse(get_file $1)
  }
  text
end

if not ARGV.empty?
  ARGV.each do |a|
    print parse File.read a
  end
elsif STDIN.stat.size > 0
  print parse STDIN.read
else
  puts <<-multiline
/*>*/  JavaScript Preprocessor  "/*>*/"

Usage: jspp input > output
  multiline
end
