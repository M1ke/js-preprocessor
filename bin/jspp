#!/usr/bin/env ruby

HELP = <<-multiline

          JavaScript Preprocessor

  Usage:  jspp input > output

Example:      main.js:  /*> script.js */

                        var style = "/*> style.css */";

            style.css:  html, body {margin:0; padding:0}
                        /*> http://nv.github.com/js-preprocessor/example/style-child.css */
                        .my-style {background: #fffacc}

      style-child.css:  .i-am-child {}

            script.js:  var my_script;

 jspp example/main.js:  var my_script;

                        var style = "html, body {margin:0; padding:0}\\
                        .i-am-child {}\\
                        .my-style {background: #fffacc}"
multiline

DIR = File.dirname ARGV.first || '.'
R_INCLUDE = %r{/\*>\s*(.+?)\s*\*/}
R_INCLUDE_INSIDE_STRING = Regexp.new('"' << R_INCLUDE.source << '"')


def get_file(path='')
  if path.index('http://') or path.index('https://')
    require 'open-uri'
    open(path).read
  else
    File.read File.join(DIR, path)
  end
end

def parse(text='')
  text.gsub!(R_INCLUDE_INSIDE_STRING) {
    '"' << parse(get_file $1).gsub(/$/, '\\').chop << '"'
  }
  text.gsub!(R_INCLUDE) {
    parse(get_file $1)
  }
  text
end

if ($stdin.tty? && ARGV.empty?) || ARGV.delete('-h') || ARGV.delete('--help')
  puts HELP
else
  print parse ARGF.read
end
